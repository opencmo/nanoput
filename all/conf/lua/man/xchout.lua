-- Ad-initiated
-- lua/exclude_vendors.lua has to been generated by py/generate_exclude_vendors.py
local exclude_vendors = require "exclude_vendors"

function get_vendors (pixel_id)
    return exclude_vendors[pixel_id]
end

local proto = "http"
ngx.var.debug_step = 1
if ngx.var.http_x_forwarded_proto then
    proto = ngx.var.http_x_forwarded_proto
    ngx.var.debug_step = 2
end

ngx.var.debug_step = 3
local redir_url = proto .. "://s.opendsp.com/1x1.gif"

ngx.var.debug_step = 4
local ck = require "resty.cookie"

ngx.var.debug_step = 5
local cookie, err = ck:new()

ngx.var.debug_step = 6
if err then
    ngx.var.misc = ngx.var.misc .. ":" .. err
    ngx.var.debug_step = 7
end

local odsp = ""
ngx.var.debug_step = 8

local odsp2 = ""
ngx.var.debug_step = 9

if cookie then
    odsp, err = cookie:get(ngx.var.kyku)

    ngx.var.debug_step = 10
    if err then
        ngx.var.debug_step = 11
        ngx.var.misc = ngx.var.misc .. ":" .. err
    end

    ngx.var.debug_step = 12
    if odsp then
        ngx.var.misc = ngx.var.misc .. ":" .. odsp
        ngx.var.debug_step = 13
    end

    ngx.var.debug_step = 14
    if err then
        ngx.var.misc = ngx.var.misc .. ":" .. err
        ngx.var.debug_step = 15
    end
end

local utils = require "utils"
ngx.var.debug_step = 16

local uid
if ngx.var.uid_set then
    uid = ngx.var.uid_set
    ngx.var.debug_step = 17
else
    uid = ngx.var.uid_got
    ngx.var.debug_step = 18
end

local base64_cookie = utils.encode_userid(ngx.var.kyku, uid)
local odsp_url_safe = ""

if base64_cookie then
    odsp_url_safe = utils.make_urlsafe(base64_cookie)
    ngx.var.debug_step = 19
end

if not odsp then
    odsp = ngx.var.uid_set
    if odsp then
        local sub = odsp:gsub(ngx.var.kyku .. "=", "HEX0")
        ngx.var.debug_step = 20
        ngx.var.comment = "SUBSTITUTION: " .. odsp .. ": " .. sub
        odsp = sub
        odsp = odsp:gsub("=", "%%3D")
    else
        ngx.var.comment = "WEIRD"
    end
else
    if ngx.var.uid_set then
        ngx.var.debug_step = 21
        ngx.var.comment = "PROBLEM: Had a cookie " .. odsp .. " AND also reset it to " .. ngx.var.uid_set
    end
end

-- npc - means Negative Partner Code
ngx.var.debug_step = 22
local npcs
local exchanges = {}
local exch = ngx.req.get_query_args()["exch"]

exchanges["adx"] = "5,6,9"

if tonumber(ngx.var.pxid) then
    npcs = get_vendors(ngx.var.pxid)
else
    npcs = ngx.req.get_query_args()["npcs"]
end

if exch then
    if exchanges[exch] then
        if npcs then
            for npc in string.gmatch(exchanges[exch], "[^,]+") do
                if not string.find(npcs, npc) then
                    npcs = npcs .. "," .. npc
                end
            end
        else
            npcs = exchanges[exch]
        end
    end
end

ngx.var.debug_step = 23
if not npcs then
    npcs = "x"
    ngx.var.debug_step = 24
end

ngx.var.debug_step = 25

local urls = {}

urls["adaptv"] = proto .. "://sync.adaptv.advertising.com/sync?type=gif&key=inpagegroupllc&uid=" .. odsp_url_safe
urls["adx"] = proto .. "://cm.g.doubleclick.net/pixel?google_nid=inpage_group_wopendsp&google_cm&google_hm=" .. odsp_url_safe .. "&nanoput=xchout"
urls["dbm"] = proto .. "://cm.g.doubleclick.net/pixel?google_nid=opendsp_dmp&google_cm&nanoput=xchout"
urls["bidswitch"] = proto .. "://x.bidswitch.net/sync?dsp_id=89&expires=30&user_id=" .. odsp_url_safe
urls['brx'] = proto .. "://s.opendsp.com/1x1.gif"
urls['liveramp'] = proto .. "://idsync.rlcdn.com/401486.gif?partner_uid=" .. odsp_url_safe
urls['lotame'] = proto .. "://bcp.crwdcntrl.net/map/c=6171/tp=OPND/tpid=" .. odsp_url_safe
urls['neustar'] = proto .. "://s.opendsp.com/1x1.gif"
urls["openx"] = proto .. "://us-u.openx.net/w/1.0/sd?id=537097544&val=%7B%20%22udat%22%3A" .. odsp2 .. "%2C%20%22uid%22%20%3A%20%22" .. odsp_url_safe .. "%22%7D&r=" .. proto .. "%3A%2F%2Fs.opendsp.com%2F1x1.gif"
urls['pubmatic'] = proto .. "://image2.pubmatic.com/AdServer/Pug?vcode=bz0yJnR5cGU9MSZjb2RlPTMxNzkmdGw9MTI5NjAw&piggybackCookie=" .. odsp_url_safe
urls['rubicon'] = proto .. "://s.opendsp.com/1x1.gif"
urls['smaato'] = proto .. "://s.opendsp.com/1x1.gif"
urls["spotx"] = proto .. "://sync.search.spotxchange.com/partner?adv_id=7190&img=1&uid=" .. odsp_url_safe

local seg = ngx.req.get_query_args()["seg"]
local qs = ngx.var.query_string
ngx.var.debug_step = 29
if not qs then
    qs = ""
    ngx.var.debug_step = 30
end

ngx.var.debug_step = 31
local pc = ngx.req.get_query_args()["pc"]
ngx.var.debug_step = 32
if pc and urls[pc] then
    redir_url = urls[pc]
    ngx.var.debug_step = 33
    ngx.var.redir = redir_url
    ngx.var.debug_step = 34
    return ngx.redirect(redir_url, ngx.HTTP_MOVED_TEMPORARILY)
end

for npc in string.gmatch(npcs, "[^,]+") do
    if npc == "1" then
        urls["adaptv"] = nil
        ngx.var.debug_step = 35
    elseif npc == "2" then
        urls["adx"] = nil
        ngx.var.debug_step = 35
    elseif npc == "13" then
        urls["dbm"] = nil
        ngx.var.debug_step = 35
    elseif npc == "3" then
        urls["bidswitch"] = nil
        ngx.var.debug_step = 35
    elseif npc == "4" then
        urls["brx"] = nil
        ngx.var.debug_step = 35
    elseif npc == "5" then
        urls["liveramp"] = nil
        ngx.var.debug_step = 35
    elseif npc == "6" then
        urls["lotame"] = nil
        ngx.var.debug_step = 35
    elseif npc == "7" then
        urls["neustar"] = nil
        ngx.var.debug_step = 35
    elseif npc == "8" then
        urls["openx"] = nil
        ngx.var.debug_step = 35
    elseif npc == "9" then
        urls["pubmatic"] = nil
        ngx.var.debug_step = 35
    elseif npc == "10" then
        urls["rubicon"] = nil
        ngx.var.debug_step = 35
    elseif npc == "11" then
        urls["smaato"] = nil
        ngx.var.debug_step = 35
    elseif npc == "12" then
        urls["spotx"] = nil
        ngx.var.debug_step = 35
    end
end

local urls2 = {}
for k, v in pairs(urls) do
    urls2[#urls2 + 1] = v
end
ngx.var.debug_step = 37

local url_cnt = #urls2
ngx.var.debug_step = 38
if url_cnt == 0 then
    ngx.var.redir = redir_url
    ngx.var.debug_step = 39
    ngx.redirect(redir_url, ngx.HTTP_MOVED_TEMPORARILY)
else
    if url_cnt == 1 then
        redir_url = urls2[1]
        ngx.var.debug_step = 40
    else
        redir_url = urls2[math.random(1, url_cnt)]
        ngx.var.debug_step = 41
    end

    ngx.var.redir = redir_url
    ngx.var.debug_step = 42
    if ngx.var.uid_reset == "" then
        ngx.var.uid_reset = nil
    end

    ngx.redirect(redir_url, ngx.HTTP_MOVED_TEMPORARILY)
end
